{{ 'customer.css' | asset_url | stylesheet_tag }}

<div class="page-width px-4">
  <header class="py-8 richtext">
    <h1 class="text-5xl">Addresses</h1>
    <a href="{{ routes.account_url }}" class="link accent1">Back to Account</a>
  </header>

  <ul class="address-list py-8">
    {%- for address in customer.addresses -%}
      <li class="address-item" data-address-id="{{ address.id }}">
        {% form 'customer_address', address %}
          {% render 'address-inputs', address: address %}

          <p class="col-2">
            <a href="#" class="action-alt">Cancel</a>
            <button class="action">Update</button>
          </p>
        {% endform %}

        <div class="hide-on-target">
          <address>{{ address | format_address }}</address>

          <p class="edit-delete">
            <a href="#address_form_{{ address.id }}" class="link-underline">Edit</a>

            <form class="delete-address" method="post" action="/account/addresses/{{ address.id }}">
              <input name="_method" value="delete" type="hidden">
              <button onclick="return confirmDelete()" class="link-underline unset">Delete</button>
            </form>
          </p>
        </div>
      </li>
    {%- endfor -%}
  </ul>

  <div class="page-width-half py-8 text-center">
    {% form 'customer_address', customer.new_address %}
      <h2 class="text-xl">Add new address</h2>

      {% render 'address-inputs', address: form %}

      <p class="col-2">
        <a href="#" class="action-alt">Cancel</a>
        <button class="action">Add</button>
      </p>
    {% endform %}

    <a href="#address_form_new" class="action hide-on-target">Add new address</a>
  </div>
</div>

<script>
  /* confirm delete */
  function confirmDelete() {
    return confirm('Are you sure you want to delete this address?')
  }

  /* populate address inputs */
  let addressForms = document.querySelectorAll('form[id*="address_form"]')
  for (let form of addressForms) {
    let countrySelect = form.querySelector('select[name="address[country]"')
    let provinceSelect = form.querySelector('select[name="address[province]"')

    for (let option of countrySelect.options) {
      if (option.value === countrySelect.dataset.defaultValue) {
        option.selected = true
      }
    }

    populateProvinces(countrySelect, provinceSelect)
    countrySelect.addEventListener('change', () => {
      populateProvinces(countrySelect, provinceSelect)
    })
  }

  function populateProvinces(countrySelect, provinceSelect) {
    provinceSelect.innerHTML = ''

    let disabledOption = document.createElement('option')
    disabledOption.disabled = true
    disabledOption.selected = true
    disabledOption.hidden = true
    disabledOption.text = 'State/Province'
    provinceSelect.appendChild(disabledOption)

    let provinces = JSON.parse(countrySelect.options[countrySelect.selectedIndex].dataset.provinces)
    provinces.forEach(([value, label]) => {
      let option = document.createElement('option')
      option.value = value
      option.text = label

      if (option.value === provinceSelect.dataset.defaultValue) {
        option.selected = true
      }

      provinceSelect.appendChild(option)
    })

    provinceSelect.disabled = !provinces.length
  }
</script>
